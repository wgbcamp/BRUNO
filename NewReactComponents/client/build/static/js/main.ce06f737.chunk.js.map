{"version":3,"sources":["utilities/api.js","subComponents/headerBar.js","pages/Main.js","pages/doesNotExist.js","pages/inGame.js","app.js","index.js"],"names":["functions","createSession","playerCount","packagedCharacters","console","log","axios","post","preliminaryCode","then","res","fetchPrelim","JSON","stringify","window","location","assign","fetchGameCode","data","i","length","charAt","g","slice","HeaderBar","props","useState","helpStatus","toggleHelp","settingsStatus","toggleStatus","dModeHTML","darkMode","headerBarStyle","backgroundColor","color","id","className","showPopup","style","onClick","blurFunction","href","swDarkMode","localStorage","setItem","App","characters","type","value","Math","random","toString","substring","parse","setPlayers","showBlur","switchBlur","submitStyle","textDecoration","switchPopup","e","stopPropagation","to","API","DoesNotExist","InGame","yourHand","player","name","score","hand","map","x","indexOf","search","Parent","React","useEffect","ws","onopen","onmessage","onclose","getItem","matched","matchMedia","matches","detectDarkMode","WebSocket","path","element","Main","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.ce06f737.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nfunction createSession(playerCount, packagedCharacters){\r\n    console.log(playerCount);\r\n    axios.post(\"http://localhost:3001/api/create\", { playerCount: playerCount, preliminaryCode: packagedCharacters })\r\n    .then(res => {\r\n        console.log(packagedCharacters);\r\n        axios.post(\"http://localhost:3001/api/fetch\", { preliminaryCode: packagedCharacters, fetchPrelim: 1})\r\n        .then(res => {\r\n            console.log(\"this is the fetch\" + JSON.stringify(res));\r\n            window.location.assign(`/inGame/${packagedCharacters}`);\r\n        })\r\n    });\r\n}\r\n\r\nfunction fetchGameCode(data){\r\n    console.log(data);\r\n    for(var i = data.length; i > -1; i--){\r\n        if(data.charAt(i) === \"/\"){\r\n            var g = data.slice(i+1, data.length);\r\n            console.log(g);\r\n            break;\r\n        }\r\n    }\r\n    axios.post(\"http://localhost:3001/api/fetch\" , { preliminaryCode: g, fetchPrelim: 1})\r\n    .then(res => {\r\n        console.log(res);\r\n    });\r\n}\r\n\r\nconst functions = {createSession, fetchGameCode};\r\nexport default functions;\r\n\r\n","import \"../stylesheets/header.css\";\r\nimport React, { useState } from 'react';\r\n\r\nfunction HeaderBar(props){\r\n\r\n    const [helpStatus, toggleHelp] = useState(false);\r\n    const [settingsStatus, toggleStatus] = useState(false);\r\n\r\n\r\n    const helpDropdown = () => {\r\n        if(settingsStatus === true){\r\n            toggleStatus(false);\r\n            toggleHelp(!helpStatus);\r\n        }else{\r\n            toggleHelp(!helpStatus);\r\n            props.blurFunction(true); \r\n        } \r\n\r\n    }\r\n    const settingsDropdown = () => {\r\n        if(helpStatus === true){\r\n            toggleHelp(false);\r\n            toggleStatus(!settingsStatus);\r\n        }else{\r\n            toggleStatus(!settingsStatus);\r\n            props.blurFunction(true); \r\n        }       \r\n    }\r\n\r\n    const overrideDarkMode = () => {\r\n        \r\n        if(props.darkMode === true){\r\n            localStorage.setItem('userSetDarkMode', 'light');\r\n        }else{\r\n            localStorage.setItem('userSetDarkMode', 'dark');\r\n        }\r\n        \r\n    }\r\n\r\n    const dModeHTML = props.darkMode ? \"Disable Dark Mode\" : \"Enable Dark Mode\";\r\n\r\n    const headerBarStyle = {\r\n        backgroundColor: props.darkMode ? \"#d549eb\" : \"#fdf906\",\r\n        color: props.darkMode ? \"white\" : \"black\"\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"headerBar\" className={props.showPopup ? \"headerBar1\" : \"headerBar2\"} style={headerBarStyle}>\r\n                <div id=\"siteLogo\" className=\"siteLogo\">\r\n                    <div id=\"placeholderLogo\" className=\"placeholderLogo\">\r\n                    BRUNO\r\n                    </div>\r\n                </div>\r\n                <div id=\"help\" className=\"help\" onClick={() =>{helpDropdown();}}>Help </div>\r\n\r\n                <div id=\"settings\" className=\"settings\" onClick={() => {settingsDropdown();}}>Settings</div>\r\n\r\n                <div id=\"source\" className=\"source\"><a href=\"https://github.com/wgbcamp/BRUNO\"><i className=\"fab fa-github\" style={headerBarStyle}> </i></a>\r\n                </div>\r\n            </div>\r\n            <div className=\"helpContainer\">\r\n                <div className={helpStatus ? \"dropdownHelp2\" : \"dropdownHelp1\"} style={{backgroundColor: props.darkMode ? \"#d549eb\" : \"#3d298a\", color: props.darkMode ? \"white\" : \"#ededed\"}}>\r\n            <p>The key to winning a game of <u><b>BRUNO</b></u>, is by being the first player to play all of the cards in your hand each round.</p>\r\n\r\n                            <p>The <u>first player</u> with no cards left in hand is awarded <u>points</u> based on the cards that are still left in each of their opponents' hands.</p>\r\n\r\n                            <p>Each player draws a card at the start of the game. The player with the highest card value is designated as the <u>dealer</u>.</p>\r\n\r\n                            <p>The deck is shuffled and each player is dealt <u>7 cards</u> from the top of the deck.</p>\r\n\r\n                            <p>The remaining cards are placed facedown to and serve as the <u>draw pile</u>.</p>\r\n\r\n                            <p>The first card from the top of the draw pile will be the first card of the <u>discard pile</u>.</p>\r\n\r\n                            <p>The player to the <u>left of the dealer goes first</u>. Cards must be matched by color, type, or action to be played. Otherwise, the player must draw a card from the <u>draw pile</u>.</p>\r\n\r\n                            <p>You must click <b>BRUNO</b> before you play your second to last card. If the next player catches you without saying <b>BRUNO</b>, you must draw 4 more cards from the <u>draw pile</u>.</p>\r\n\r\n                            <p>There are 25 cards of each color type (Red, Blue, Green, & Yellow). These cards include numbered cards from 0 to 9 as well as Skip, Reverse, and Draw 2 cards. There are also 4 Wild cards and 4 Wild Draw 4 cards.</p>\r\n\r\n                            <p>Scoring for the first player to play every card in their hand:\r\n                                <br></br>\r\n                                <br></br>\r\n                                Numbered cards = their face value\r\n                                <br></br>\r\n                                <br></br>\r\n                                Draw 2/Reverse/Skip = 20 points\r\n                                <br></br>\r\n                                <br></br>\r\n                                Wild/Wild Draw 4 = 20 points\r\n                            </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"settingsContainer\">\r\n                <div className={settingsStatus ? \"dropdownSettings2\" : \"dropdownSettings1\"}>\r\n                    <div className=\"volume\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>Sounds: ON/OFF</div>\r\n                    <div className=\"textSize\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>Change text size</div>\r\n                    <div className=\"darkMode\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}} onClick={() => {props.swDarkMode(!props.darkMode); overrideDarkMode();}}>{dModeHTML}</div>\r\n                    <div className=\"leaveSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>Leave Session</div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\nexport default HeaderBar;\r\n","import \"../stylesheets/main.css\";\r\nimport React, { useState } from 'react';\r\nimport API from \"../utilities/api\";\r\nimport HeaderBar from \"../subComponents/headerBar\";\r\n\r\n\r\nfunction App(props) {\r\n    \r\n    const characters = {\r\n        type: \"trigger_game\",\r\n        value: Math.random().toString(36).substring(2,15)\r\n    }\r\n\r\n    const packagedCharacters = JSON.parse(JSON.stringify(characters)).value;\r\n\r\n    const [playerCount, setPlayers] = useState(2);\r\n    const [showBlur, switchBlur] = useState(false);\r\n\r\n    const blur = (data) => {  \r\n        if(data === true){\r\n            switchBlur(!showBlur);\r\n        }\r\n    }\r\n\r\n    function increment(){\r\n        if (playerCount !== 8){\r\n            setPlayers(playerCount+1);\r\n        }\r\n    }\r\n\r\n    function decrement(){\r\n        if (playerCount !== 2){\r\n            setPlayers(playerCount-1);\r\n        }\r\n    }\r\n\r\n    function submitCode(){\r\n        \r\n        API.createSession(playerCount, packagedCharacters);        \r\n    }\r\n\r\n    const submitStyle = {\r\n        backgroundColor: props.darkMode ? \"#4cdd81\" : \"#4cdd81\",\r\n        color: props.darkMode ? \"white\" : \"white\",\r\n        textDecoration: 'none'\r\n    }\r\n\r\n  return (\r\n    <div id=\"container\" className={props.darkMode ? \"container1\" : \"container2\"}>  \r\n    <HeaderBar swDarkMode={props.swDarkMode} darkMode={props.darkMode} showPopup={props.showPopup} blurFunction={blur}/>   \r\n    <div id=\"mainGrid\" className={`${\"mainGrid1\"} ${showBlur ? \"blur\" : \"no-blur\"}`} style={{backgroundColor: props.darkMode ? \"#3d298a\" : \"white\"}}>\r\n        <div id=\"title\" className=\"title\" style={{color: props.darkMode ? \"white\" : \"black\"}}> \r\n            BRUNO\r\n            <div id=\"subtitle\" className=\"subtitle\" style={{color: props.darkMode ? \"#ededed\" : \"#383838\"}}>\r\n                A recreation of the classic crazy eights card game.\r\n            </div>\r\n        </div>\r\n        <div id=\"createSession\" className=\"createSession\" onClick={() => {props.switchPopup(!props.showPopup); switchBlur(!showBlur)}} style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>\r\n            Create Session\r\n        </div>\r\n        <div id=\"publicSession\" className=\"publicSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>\r\n            Browse Public Games\r\n        </div>\r\n        <div id=\"searchForSession\" className=\"searchForSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>\r\n            Search for Private Game\r\n        </div>\r\n    </div>\r\n    <div id=\"sessionPopupContainer\" className={props.showPopup ? \"sessionPopupContainer1\" : \"sessionPopupContainer2\"} onClick={() => {props.switchPopup(!props.showPopup); switchBlur(!showBlur)}}>\r\n        <div id=\"sessionPopup\" className={props.showPopup ? \"sessionPopup1\" : \"sessionPopup2\"} style={{backgroundColor: props.darkMode? \"#c079ff\" : \"#3d298a\"}} onClick={(e) => e.stopPropagation()}>\r\n            <div id=\"playerCountText\" className=\"playerCountText\">\r\n                How many players?\r\n            </div>\r\n            <div id=\"playerCountContainer\" className=\"playerCountContainer\">\r\n            <div id=\"arrow\" className=\"arrowLeft\" style={{backgroundColor: props.darkMode ? \"#d7aaff\" : \"#706bff\"}} onClick={() => decrement()}><i className=\"fas fa-long-arrow-alt-left\"></i></div>\r\n            <div id=\"playerCount\" className=\"playerCount\" style={{backgroundColor: props.darkMode ? \"#d09aff\" : \"#5c57e6\"}}>{playerCount}</div>\r\n            <div id=\"arrow\" className=\"arrowRight\" style={{backgroundColor: props.darkMode ? \"#d7aaff\" : \"#706bff\"}} onClick={() => increment()}><i className=\"fas fa-long-arrow-alt-right\"></i></div>\r\n            </div>\r\n            <div to=\"/InGame\" className=\"confirm\" style={submitStyle} onClick={submitCode}>\r\n            Submit\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"../stylesheets/main.css\";\r\nimport React, { useState } from 'react';\r\nimport HeaderBar from \"../subComponents/headerBar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DoesNotExist(props) {\r\n\r\n    const [showBlur, switchBlur] = useState(false);\r\n\r\n    const blur = (data) => {  \r\n        if(data === true){\r\n            switchBlur(!showBlur);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div id=\"container\" className={props.darkMode ? \"container1\" : \"container2\"}>  \r\n    <HeaderBar swDarkMode={props.swDarkMode} darkMode={props.darkMode}  blurFunction={blur}/>   \r\n    <div id=\"mainGrid\" className={`${\"mainGrid1\"} ${showBlur ? \"blur\" : \"no-blur\"}`} style={{backgroundColor: props.darkMode ? \"#3d298a\" : \"white\"}}>\r\n        <div id=\"title\" className=\"title\" style={{color: props.darkMode ? \"white\" : \"black\"}}> \r\n            BRUNO\r\n            <div id=\"subtitle\" className=\"subtitle\" style={{color: props.darkMode ? \"#ededed\" : \"#383838\"}}>\r\n            Uh oh! It looks like you've ventured into uncharted terroritory. This address doesn't exist, but you can click the button below to go to the home page.\r\n            </div>\r\n        </div>\r\n        <Link to=\"/\" className=\"createSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\", textDecoration: 'none'}}>\r\n        \r\n            RETURN TO HOMEPAGE\r\n            \r\n        \r\n        </Link>\r\n    </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default DoesNotExist;\r\n","import \"../stylesheets/main.css\";\r\nimport \"../stylesheets/inGame.css\";\r\nimport React, { useState } from 'react';\r\nimport API from \"../utilities/api\";\r\nimport HeaderBar from \"../subComponents/headerBar\";\r\n\r\n\r\nfunction InGame(props) {\r\n\r\n    const [showBlur, switchBlur] = useState(false);\r\n\r\n    const blur = (data) => {  \r\n        if(data === true){\r\n            switchBlur(!showBlur);\r\n        }\r\n    }\r\n\r\n    API.fetchGameCode(window.location.href);\r\n\r\n    const [yourHand, updateYourHand] = useState([\"greenCard4\", \"yellowCard5\", \"blueCardReverse\", \"wildCardDraw4\", \"redCardSkip\"]);\r\n    const [yourScore, updateYourScore] = useState(0);\r\n    const otherPlayerStats = [\r\n        { player: \"player2\", name: \"Bill\", score: 0, hand: [\"redCard6 \", \"blueCardSkip \"] },\r\n        { player: \"player3\", name: \"Sam\", score: 0, hand: [\"redCard6 \", \"blueCardSkip \"] },\r\n        { player: \"player4\", name: \"Phil\", score: 0, hand: [\"redCard6 \", \"blueCardSkip \"] },\r\n    ]\r\n    \r\n  return (\r\n    <div id=\"container\" className={props.darkMode ? \"container1\" : \"container2\"}>  \r\n    <HeaderBar swDarkMode={props.swDarkMode} darkMode={props.darkMode} showPopup={props.showPopup} blurFunction={blur}/>   \r\n        <div id=\"mainGrid\" className={`${\"igGrid\"} ${showBlur ? \"blur\" : \"no-blur\"}`} style={{backgroundColor: props.darkMode ? \"#3d298a\" : \"white\"}}>\r\n\r\n                {otherPlayerStats.map(({ player, name, score, hand }) => ( \r\n                    <p className={player} style={{color: props.darkMode ? \"white\" : \"black\"}} key={[player]}>\r\n                        <div> {player}</div>\r\n                        <div>Name: {name}</div>\r\n                        <div>Score: {score}</div>\r\n                        <div>Hand: {hand}</div>\r\n                    </p>     \r\n                ))}\r\n                <div className=\"playerHandContainer\">\r\n                    <div className=\"placeholderArrowLeft\">Left</div>\r\n                    <div className=\"placeholderArrowRight\">Right</div>\r\n                    <div className=\"playerHand\">\r\n                        {yourHand.map((x) => (\r\n                            <div className={`${\"cardAlign\"} ${yourHand[yourHand.indexOf(x)].slice(0, yourHand[yourHand.indexOf(x)].search(\"Card\"))}`}>{x}</div>    \r\n                        ))}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InGame;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Main from './pages/Main';\r\nimport DoesNotExist from './pages/doesNotExist';\r\nimport InGame from './pages/inGame';\r\n\r\nfunction Parent(){\r\n    React.useEffect(() => {\r\n        function detectDarkMode(){\r\n            if(localStorage.getItem('userSetDarkMode') === null){\r\n                let matched = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n                if(matched){\r\n                    swDarkMode(true);\r\n                }else{\r\n                    swDarkMode(false);\r\n                }\r\n            }\r\n            if(localStorage.getItem('userSetDarkMode') === 'dark'){\r\n                swDarkMode(true);                \r\n            } \r\n        }\r\n\r\n    \r\n        ws.onopen = () => {\r\n            console.log(\"websocket connected\");\r\n        }\r\n        ws.onmessage = (e) => {\r\n        }\r\n        ws.onclose = () => {\r\n            console.log('websocket disconnected')\r\n        }\r\n\r\n        detectDarkMode();\r\n    })\r\n        const ws = new WebSocket('ws://localhost:8080');\r\n        const [darkMode, swDarkMode] = useState(false);\r\n        const [showPopup, switchPopup] = useState(false);    \r\n\r\n    return(\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Main swDarkMode={swDarkMode} darkMode={darkMode} switchPopup={switchPopup} showPopup={showPopup}/>} />\r\n                <Route path=\"*\" element={<DoesNotExist swDarkMode={swDarkMode} darkMode={darkMode} switchPopup={switchPopup} showPopup={showPopup}/>} />\r\n                <Route path=\"/inGame/\" element={<InGame swDarkMode={swDarkMode} darkMode={darkMode}switchPopup={switchPopup} showPopup={showPopup}/>} />\r\n                <Route path=\"/inGame/:id\" element={<InGame swDarkMode={swDarkMode} darkMode={darkMode} switchPopup={switchPopup} showPopup={showPopup}/>} />\r\n            </Routes>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Parent;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Parent from './app';\r\n\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(\r\n  <Parent/>,\r\n  rootElement\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}