{"version":3,"sources":["utilities/api.js","subComponents/headerBar.js","pages/Main.js","pages/doesNotExist.js","pages/inGame.js","pages/conditionalGamePage.js","app.js","index.js"],"names":["functions","createSession","playerCount","packagedCharacters","cb","console","log","axios","post","preliminaryCode","then","res","fetchPrelim","data","status","sessionStorage","setItem","window","location","assign","fetchGameCode","i","length","charAt","g","slice","HeaderBar","props","useState","helpStatus","toggleHelp","settingsStatus","toggleStatus","dModeHTML","darkMode","headerBarStyle","backgroundColor","color","id","className","showPopup","style","href","textDecoration","onClick","switchBlur","showBlur","swDarkMode","localStorage","App","characters","type","value","Math","random","toString","substring","JSON","parse","stringify","setPlayers","submitStyle","switchPopup","e","stopPropagation","to","API","result","DoesNotExist","loadingIcon","InGame","ws","onopen","send","yourHand","gameCode","player","name","score","hand","map","x","indexOf","search","ConditionalGamePage","useEffect","updateCURLC","switchLoadingIcon","conditionalURLCheck","updateGameCode","getItem","matchMedia","matches","path","element","Main","WebSocket","onmessage","onclose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0da122a8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nfunction createSession(playerCount, packagedCharacters, cb){\r\n    console.log(playerCount);\r\n    axios.post(\"192.168.1.181:3001/api/create\", { playerCount: playerCount, preliminaryCode: packagedCharacters })\r\n    .then(res => {\r\n        console.log(packagedCharacters);\r\n        axios.post(\"192.168.1.181:3001/api/fetch\", { preliminaryCode: packagedCharacters, fetchPrelim: 1})\r\n        .then(res => {\r\n            cb(res.data);\r\n            if(res.status === 200){\r\n            sessionStorage.setItem('gameCode', res.data);\r\n            window.location.assign(`/inGame/${packagedCharacters}`);\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nfunction fetchGameCode(data, cb){\r\n    for(var i = data.length; i > -1; i--){\r\n        if(data.charAt(i) === \"/\"){\r\n            var g = data.slice(i+1, data.length);\r\n            console.log(g);\r\n            break;\r\n        }\r\n    }\r\n    axios.post(\"192.168.1.181:3001/api/fetch\" , { preliminaryCode: g, fetchPrelim: 1})\r\n    .then(res => {\r\n        console.log(res);\r\n        cb(res);\r\n    });\r\n}\r\n\r\nconst functions = {createSession, fetchGameCode};\r\nexport default functions;\r\n\r\n","import \"../stylesheets/header.css\";\r\nimport React, { useState } from 'react';\r\n\r\nfunction HeaderBar(props){\r\n\r\n    const [helpStatus, toggleHelp] = useState(false);\r\n    const [settingsStatus, toggleStatus] = useState(false);\r\n\r\n\r\n    const helpDropdown = () => {\r\n        if(settingsStatus === true){\r\n            toggleStatus(false);\r\n            toggleHelp(!helpStatus);\r\n        }else{\r\n            toggleHelp(!helpStatus);\r\n            props.switchBlur(!props.showBlur); \r\n        } \r\n\r\n    }\r\n    const settingsDropdown = () => {\r\n        if(helpStatus === true){\r\n            toggleHelp(false);\r\n            toggleStatus(!settingsStatus);\r\n        }else{\r\n            toggleStatus(!settingsStatus);\r\n            props.switchBlur(!props.showBlur); \r\n        }       \r\n    }\r\n\r\n    const overrideDarkMode = () => {\r\n        \r\n        if(props.darkMode === true){\r\n            localStorage.setItem('userSetDarkMode', 'light');\r\n        }else{\r\n            localStorage.setItem('userSetDarkMode', 'dark');\r\n        }\r\n        \r\n    }\r\n\r\n    const dModeHTML = props.darkMode ? \"Disable Dark Mode\" : \"Enable Dark Mode\";\r\n\r\n    const headerBarStyle = {\r\n        backgroundColor: props.darkMode ? \"#d549eb\" : \"#fdf906\",\r\n        color: props.darkMode ? \"white\" : \"black\"\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"headerBar\" className={props.showPopup ? \"headerBar1\" : \"headerBar2\"} style={headerBarStyle}>\r\n                <div id=\"siteLogo\" className=\"siteLogo\">\r\n                    <div id=\"placeholderLogo\" className=\"placeholderLogo\" ><a href=\"/\" style={{textDecoration: 'none', color: props.darkMode ? \"white\": \"black\"}}>BRUNO</a>\r\n                    </div>\r\n                </div>\r\n                <div id=\"help\" className=\"help\" onClick={() =>{helpDropdown();}}>Help </div>\r\n\r\n                <div id=\"settings\" className=\"settings\" onClick={() => {settingsDropdown();}}>Settings</div>\r\n\r\n                <div id=\"source\" className=\"source\"><a href=\"https://github.com/wgbcamp/BRUNO\"><i className=\"fab fa-github\" style={headerBarStyle}> </i></a>\r\n                </div>\r\n            </div>\r\n            <div className=\"helpContainer\">\r\n                <div className={helpStatus ? \"dropdownHelp2\" : \"dropdownHelp1\"} style={{backgroundColor: props.darkMode ? \"#d549eb\" : \"#3d298a\", color: props.darkMode ? \"white\" : \"#ededed\"}}>\r\n            <p>The key to winning a game of <u><b>BRUNO</b></u>, is by being the first player to play all of the cards in your hand each round.</p>\r\n\r\n                            <p>The <u>first player</u> with no cards left in hand is awarded <u>points</u> based on the cards that are still left in each of their opponents' hands.</p>\r\n\r\n                            <p>Each player draws a card at the start of the game. The player with the highest card value is designated as the <u>dealer</u>.</p>\r\n\r\n                            <p>The deck is shuffled and each player is dealt <u>7 cards</u> from the top of the deck.</p>\r\n\r\n                            <p>The remaining cards are placed facedown to and serve as the <u>draw pile</u>.</p>\r\n\r\n                            <p>The first card from the top of the draw pile will be the first card of the <u>discard pile</u>.</p>\r\n\r\n                            <p>The player to the <u>left of the dealer goes first</u>. Cards must be matched by color, type, or action to be played. Otherwise, the player must draw a card from the <u>draw pile</u>.</p>\r\n\r\n                            <p>You must click <b>BRUNO</b> before you play your second to last card. If the next player catches you without saying <b>BRUNO</b>, you must draw 4 more cards from the <u>draw pile</u>.</p>\r\n\r\n                            <p>There are 25 cards of each color type (Red, Blue, Green, & Yellow). These cards include numbered cards from 0 to 9 as well as Skip, Reverse, and Draw 2 cards. There are also 4 Wild cards and 4 Wild Draw 4 cards.</p>\r\n\r\n                            <p>Scoring for the first player to play every card in their hand:\r\n                                <br></br>\r\n                                <br></br>\r\n                                Numbered cards = their face value\r\n                                <br></br>\r\n                                <br></br>\r\n                                Draw 2/Reverse/Skip = 20 points\r\n                                <br></br>\r\n                                <br></br>\r\n                                Wild/Wild Draw 4 = 20 points\r\n                            </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"settingsContainer\">\r\n                <div className={settingsStatus ? \"dropdownSettings2\" : \"dropdownSettings1\"}>\r\n                    <div className=\"volume\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>Sounds: ON/OFF</div>\r\n                    <div className=\"textSize\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>Change text size</div>\r\n                    <div className=\"darkMode\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}} onClick={() => {props.swDarkMode(!props.darkMode); overrideDarkMode();}}>{dModeHTML}</div>\r\n                    <div className=\"leaveSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>Leave Session</div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\nexport default HeaderBar;\r\n","import \"../stylesheets/main.css\";\r\nimport React, { useState } from 'react';\r\nimport API from \"../utilities/api\";\r\nimport HeaderBar from \"../subComponents/headerBar\";\r\n\r\n\r\nfunction App(props) {\r\n    \r\n    const characters = {\r\n        type: \"trigger_game\",\r\n        value: Math.random().toString(36).substring(2,15)\r\n    }\r\n\r\n    const packagedCharacters = JSON.parse(JSON.stringify(characters)).value;\r\n\r\n    const [playerCount, setPlayers] = useState(2);\r\n    \r\n    function increment(){\r\n        if (playerCount !== 8){\r\n            setPlayers(playerCount+1);\r\n        }\r\n    }\r\n\r\n    function decrement(){\r\n        if (playerCount !== 2){\r\n            setPlayers(playerCount-1);\r\n        }\r\n    }\r\n    \r\n    function submitCode(){\r\n        \r\n        API.createSession(playerCount, packagedCharacters, response);\r\n        function response(result){\r\n            console.log(result);\r\n        }        \r\n    }\r\n\r\n    const submitStyle = {\r\n        backgroundColor: props.darkMode ? \"#4cdd81\" : \"#4cdd81\",\r\n        color: props.darkMode ? \"white\" : \"white\",\r\n        textDecoration: 'none'\r\n    }\r\n\r\n  return (\r\n    <div>  \r\n    <div id=\"mainGrid\" className={`${\"mainGrid1\"} ${props.showBlur ? \"blur\" : \"no-blur\"}`} style={{backgroundColor: props.darkMode ? \"#3d298a\" : \"white\"}}>\r\n        <div id=\"title\" className=\"title\" style={{color: props.darkMode ? \"white\" : \"black\"}}> \r\n            BRUNO\r\n            <div id=\"subtitle\" className=\"subtitle\" style={{color: props.darkMode ? \"#ededed\" : \"#383838\"}}>\r\n                A recreation of the classic crazy eights card game.\r\n            </div>\r\n        </div>\r\n        <div id=\"createSession\" className=\"createSession\" onClick={() => {props.switchPopup(!props.showPopup); props.switchBlur(!props.showBlur)}} style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>\r\n            Create Session\r\n        </div>\r\n        <div id=\"publicSession\" className=\"publicSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>\r\n            Browse Public Games\r\n        </div>\r\n        <div id=\"searchForSession\" className=\"searchForSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\"}}>\r\n            Search for Private Game\r\n        </div>\r\n    </div>\r\n    <div id=\"sessionPopupContainer\" className={props.showPopup ? \"sessionPopupContainer1\" : \"sessionPopupContainer2\"} onClick={() => {props.switchPopup(!props.showPopup); props.switchBlur(!props.showBlur)}}>\r\n        <div id=\"sessionPopup\" className={props.showPopup ? \"sessionPopup1\" : \"sessionPopup2\"} style={{backgroundColor: props.darkMode? \"#c079ff\" : \"#3d298a\"}} onClick={(e) => e.stopPropagation()}>\r\n            <div id=\"playerCountText\" className=\"playerCountText\">\r\n                How many players?\r\n            </div>\r\n            <div id=\"playerCountContainer\" className=\"playerCountContainer\">\r\n            <div id=\"arrow\" className=\"arrowLeft\" style={{backgroundColor: props.darkMode ? \"#d7aaff\" : \"#706bff\"}} onClick={() => decrement()}><i className=\"fas fa-long-arrow-alt-left\"></i></div>\r\n            <div id=\"playerCount\" className=\"playerCount\" style={{backgroundColor: props.darkMode ? \"#d09aff\" : \"#5c57e6\"}}>{playerCount}</div>\r\n            <div id=\"arrow\" className=\"arrowRight\" style={{backgroundColor: props.darkMode ? \"#d7aaff\" : \"#706bff\"}} onClick={() => increment()}><i className=\"fas fa-long-arrow-alt-right\"></i></div>\r\n            </div>\r\n            <div to=\"/InGame\" className=\"confirm\" style={submitStyle} onClick={() => submitCode()}>\r\n            Submit\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"../stylesheets/main.css\";\r\nimport React, { useState } from 'react';\r\nimport HeaderBar from \"../subComponents/headerBar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DoesNotExist(props) {\r\n\r\n  return (\r\n    <div>  \r\n\r\n    <div id=\"mainGrid\" className={`${\"mainGrid1\"} ${props.showBlur ? \"blur\" : \"no-blur\"}`} style={{backgroundColor: props.darkMode ? \"#3d298a\" : \"white\"}}>\r\n      {props.loadingIcon ? <div className=\"loadingIconContainer\"><div className=\"fa-10x\"><i className=\"fas fa-spinner fa-spin\"></i></div></div> :\r\n      <>\r\n        <div id=\"title\" className=\"title\" style={{color: props.darkMode ? \"white\" : \"black\"}}> \r\n            BRUNO\r\n            <div id=\"subtitle\" className=\"subtitle\" style={{color: props.darkMode ? \"#ededed\" : \"#383838\"}}>\r\n            Uh oh! It looks like you've ventured into uncharted terroritory. This address doesn't exist, but you can click the button below to go to the home page.\r\n            </div>\r\n        </div>\r\n        <Link to=\"/\" className=\"createSession\" style={{backgroundColor: props.darkMode ? \"#c079ff\" : \"#3d298a\", textDecoration: 'none'}}>\r\n            RETURN TO HOMEPAGE\r\n        </Link>\r\n      </>\r\n        }\r\n    </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default DoesNotExist;\r\n","import \"../stylesheets/main.css\";\r\nimport \"../stylesheets/inGame.css\";\r\nimport React, { useState } from 'react';\r\nimport API from \"../utilities/api\";\r\nimport HeaderBar from \"../subComponents/headerBar\";\r\n\r\nfunction InGame(props) {\r\n\r\n    props.ws.onopen = () => {\r\n        //if cookie doesn't exist, then send a message to server to log the user, then saves a cookie that only allows the logged-in user to play as a specific player\r\n        console.log(\"HIHIHI\")\r\n        props.ws.send(\"test\");\r\n    }\r\nfunction StartGame(){\r\n        props.ws.send(\"test\");\r\n\r\n}\r\n\r\n    const [yourHand, updateYourHand] = useState([\"greenCard4\", \"yellowCard5\", \"blueCardReverse\", \"wildCardDraw4\", \"redCardSkip\"]);\r\n    const [yourScore, updateYourScore] = useState(0);\r\n    const otherPlayerStats = [\r\n        { player: \"player2\", name: \"Bill\", score: 0, hand: [\"redCard6 \", \"blueCardSkip \"] },\r\n        { player: \"player3\", name: \"Sam\", score: 0, hand: [\"redCard6 \", \"blueCardSkip \"] },\r\n        { player: \"player4\", name: \"Phil\", score: 0, hand: [\"redCard6 \", \"blueCardSkip \"] },\r\n    ]\r\n    \r\n  return (\r\n    <div>  \r\n        <div id=\"mainGrid\" className={`${\"igGrid\"} ${props.showBlur ? \"blur\" : \"no-blur\"}`} style={{backgroundColor: props.darkMode ? \"#3d298a\" : \"white\"}}>\r\n\r\n        <div className=\"gameCode\" style={{color: 'white'}}>{props.gameCode}</div>\r\n        <div className=\"startButton\" onClick={() => StartGame()} style={{color: 'white', backgroundColor: 'green'}}>START BUTTON</div>\r\n        <div className=\"playerStats\" >PLAYER STATS</div>\r\n                {otherPlayerStats.map(({ player, name, score, hand }) => ( \r\n                    <div className={player} style={{color: props.darkMode ? \"white\" : \"black\"}} key={[player]}>\r\n                        <div> {player}</div>\r\n                        <div>Name: {name}</div>\r\n                        <div>Score: {score}</div>\r\n                        <div>Hand: {hand}</div>\r\n                    </div>     \r\n                ))}\r\n                <div className=\"playerHandContainer\">\r\n                    <div className=\"placeholderArrowLeft\">Left</div>\r\n                    <div className=\"placeholderArrowRight\">Right</div>\r\n                    <div className=\"playerHand\">\r\n                        {yourHand.map((x) => (\r\n                            <div className={`${\"cardAlign\"} ${yourHand[yourHand.indexOf(x)].slice(0, yourHand[yourHand.indexOf(x)].search(\"Card\"))}`} key={x}>{x}</div>    \r\n                        ))}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InGame;\r\n","import React, { useEffect, useState } from 'react';\r\nimport InGame from './inGame';\r\nimport DoesNotExist from './doesNotExist';\r\nimport API from '../utilities/api';\r\n\r\nfunction ConditionalGamePage(props){\r\n\r\n    const value = useState('initial');\r\n    \r\n    useEffect(() => {\r\n        \r\n        API.fetchGameCode(window.location.href, response);\r\n        \r\n        function response(res){\r\n            if(res.status === 200){  \r\n                if(res.data !== 'Document not found'){\r\n                    props.updateCURLC(true);\r\n                }else{\r\n                    props.switchLoadingIcon(false);\r\n                }      \r\n            }         \r\n        }\r\n    }, [])\r\n    \r\n        return (\r\n            <div>{props.conditionalURLCheck ? <InGame darkMode={props.darkMode} switchPopup={props.switchPopup} showPopup={props.showPopup} gameCode={props.gameCode} updateGameCode={props.updateGameCode} showBlur={props.showBlur} ws={props.ws}/> : \r\n            props.loadingIcon ? <div id=\"mainGrid\" className={`${\"mainGrid1\"} ${props.showBlur ? \"blur\" : \"no-blur\"}`} style={{backgroundColor: props.darkMode ? \"#3d298a\" : \"white\"}}>\r\n            <div className=\"loadingIconContainer\"><div className=\"fa-10x\"><i className=\"fas fa-spinner fa-spin\"></i></div></div></div>: \r\n            <DoesNotExist darkMode={props.darkMode} switchPopup={props.switchPopup} showPopup={props.showPopup} gameCode={props.gameCode} updateGameCode={props.updateGameCode} showBlur={props.showBlur} ws={props.ws}/>}</div>\r\n        )\r\n}\r\n\r\n{/* <DoesNotExist darkMode={props.darkMode} switchPopup={props.switchPopup} showPopup={props.showPopup} gameCode={props.gameCode} updateGameCode={props.updateGameCode} showBlur={props.showBlur} ws={props.ws}/> */}\r\nexport default ConditionalGamePage;","import React, { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Main from './pages/Main';\r\nimport DoesNotExist from './pages/doesNotExist';\r\nimport InGame from './pages/inGame';\r\nimport HeaderBar from './subComponents/headerBar';\r\nimport ConditionalGamePage from './pages/conditionalGamePage';\r\n\r\n\r\nfunction App(props){\r\n\r\n    \r\n    const [darkMode, swDarkMode] = useState(\r\n        localStorage.getItem('userSetDarkMode') === 'dark' ? true : \r\n        localStorage.getItem('userSetDarkMode') === 'light' ? false : \r\n        window.matchMedia('(prefers-color-scheme: dark)').matches ? true : false);\r\n    const [showPopup, switchPopup] = useState(false);\r\n    const [gameCode, updateGameCode] = useState(sessionStorage.getItem('gameCode'));\r\n    const [showBlur, switchBlur] = useState(false);\r\n\r\n    const [conditionalURLCheck, updateCURLC] = useState(false);\r\n    const [loadingIcon, switchLoadingIcon] = useState(true);\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div id=\"container\" className={darkMode ? \"container1\" : \"container2\"}>  \r\n        <>\r\n        <HeaderBar swDarkMode={swDarkMode} darkMode={darkMode} showPopup={showPopup} switchBlur={switchBlur} showBlur={showBlur}/>\r\n        \r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Main darkMode={darkMode} switchPopup={switchPopup} showPopup={showPopup} gameCode={gameCode} updateGameCode={updateGameCode} showBlur={showBlur} switchBlur={switchBlur}/>}/>\r\n                <Route path=\"*\" element={<DoesNotExist darkMode={darkMode} switchPopup={switchPopup} showPopup={showPopup} gameCode={gameCode} updateGameCode={updateGameCode} showBlur={showBlur} loadingIcon={loadingIcon} switchLoadingIcon={switchLoadingIcon}/>} />\r\n                <Route path=\"/inGame/:id\" element={<ConditionalGamePage darkMode={darkMode} switchPopup={switchPopup} showPopup={showPopup} gameCode={gameCode} updateGameCode={updateGameCode} showBlur={showBlur} ws={props.ws} loadingIcon={loadingIcon} switchLoadingIcon={switchLoadingIcon} conditionalURLCheck={conditionalURLCheck} updateCURLC={updateCURLC}/>} />\r\n            </Routes>\r\n        </BrowserRouter>\r\n        </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport  ReactDOM  from 'react-dom';\r\nimport App from './app';\r\nconst ws = new WebSocket('wss://192.168.1.181:8080');\r\n\r\nws.onopen = () => {\r\n    console.log(\"websocket connected\");\r\n    \r\n}\r\nws.onmessage = (e) => {\r\n    if(sessionStorage.getItem('gameCode')){\r\n        ws.send(\"test\");\r\n    }\r\n}\r\n\r\nws.onclose = () => {\r\n    console.log('websocket disconnected')\r\n}\r\n\r\nReactDOM.render(<App ws={ws}/>,  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}