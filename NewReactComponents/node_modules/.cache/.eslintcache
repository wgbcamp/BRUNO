[{"/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/index.js":"1","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/reportWebVitals.js":"2","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/App.js":"3","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/animations/colorChange.js":"4","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/animations/animateDropdown.js":"5","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/animations/animatePopup.js":"6"},{"size":478,"mtime":1636126921430,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1636126921430,"results":"9","hashOfConfig":"8"},{"size":4868,"mtime":1636131663110,"results":"10","hashOfConfig":"8"},{"size":2321,"mtime":1636126921430,"results":"11","hashOfConfig":"8"},{"size":1798,"mtime":1636138123032,"results":"12","hashOfConfig":"8"},{"size":204,"mtime":1636138129208,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"s7pzkb",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/index.js",[],["31","32"],"/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/reportWebVitals.js",[],"/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/App.js",["33","34"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport * as ani from './animations/animateDropdown';\nimport * as cC from './animations/colorChange';\nimport * as aP from './animations/animatePopup';\n\nfunction App() {\n\n    React.useEffect(() => {\n        function resizeContent(){\n            console.log('innerWidth: ' + window.innerWidth + 'innerHeight: ' + window.innerHeight)\n        }\n        window.addEventListener('resize', resizeContent);\n    })\n    \n\n  return (\n    <div id=\"container\">\n      <div id=\"headerBar\" className=\"headerBar\">\n        <div id=\"siteLogo\">\n          <div id=\"placeholderLogo\">\n                  BRUNO\n                  \n          </div>\n        </div>\n        <div id=\"help\" onClick={ani.animateDropdown} onMouseOut={cC.changeToBlack} style={{color: 'black'}}>Help </div>\n\n        <div id=\"settings\" onClick={ani.animateDropdown} onMouseOut={cC.changeToBlack} style={{color: 'black'}}>Settings</div>\n\n        <div id=\"source\"><a href=\"https://github.com/wgbcamp/BRUNO\"><i className=\"fab fa-github\" onMouseOut={cC.changeToBlack} style={{color: 'black'}}> </i></a>\n        </div>\n      </div>\n      <div id=\"dropdownHelp\">\n            <p>The key to winning a game of <u><b>BRUNO</b></u>, is by being the first player to play all of the cards in your hand each round.</p>\n\n                            <p>The <u>first player</u> with no cards left in hand is awarded <u>points</u> based on the cards that are still left in each of their opponents' hands.</p>\n\n                            <p>Each player draws a card at the start of the game. The player with the highest card value is designated as the <u>dealer</u>.</p>\n\n                            <p>The deck is shuffled and each player is dealt <u>7 cards</u> from the top of the deck.</p>\n\n                            <p>The remaining cards are placed facedown to and serve as the <u>draw pile</u>.</p>\n\n                            <p>The first card from the top of the draw pile will be the first card of the <u>discard pile</u>.</p>\n\n                            <p>The player to the <u>left of the dealer goes first</u>. Cards must be matched by color, type, or action to be played. Otherwise, the player must draw a card from the <u>draw pile</u>.</p>\n\n                            <p>You must click <b>BRUNO</b> before you play your second to last card. If the next player catches you without saying <b>BRUNO</b>, you must draw 4 more cards from the <u>draw pile</u>.</p>\n\n                            <p>There are 25 cards of each color type (Red, Blue, Green, & Yellow). These cards include numbered cards from 0 to 9 as well as Skip, Reverse, and Draw 2 cards. There are also 4 Wild cards and 4 Wild Draw 4 cards.</p>\n\n                            <p>Scoring for the first player to play every card in their hand:\n                                <br></br>\n                                <br></br>\n                                Numbered cards = their face value\n                                <br></br>\n                                <br></br>\n                                Draw 2/Reverse/Skip = 20 points\n                                <br></br>\n                                <br></br>\n                                Wild/Wild Draw 4 = 20 points\n                            </p>\n        </div>\n        <div id=\"dropdownSettings\">\n            <div id=\"settingsChoices\">\n                <div id=\"volume\" className=\"ddButton btnClr\">\n                    Sounds: ON/OFF\n                </div>\n                <div id=\"textSize\" className=\"ddButton btnClr\">\n                    Change text size\n                </div>\n                <div id=\"darkMode\" className=\"ddButton btnClr\" onClick={cC.darkMode}>Enable Dark Mode</div>\n                <div id=\"leaveSession\" className=\"ddButton btnClr\">\n                    Leave Session\n                </div>\n            </div>\n        </div>\n    <div id=\"mainGrid\">\n        <div id=\"title\"> \n            BRUNO\n            <div id=\"subtitle\">\n                A recreation of the classic crazy eights card game.\n            </div>\n        </div>\n        <div id=\"createSession\" className=\"mainButton btnClr\" onMouseOver={cC.btnClrShift} onMouseOut={cC.originalColor} onClick={aP.animatePopup}>\n            Create Session\n        </div>\n        <div id=\"publicSession\" className=\"mainButton btnClr\" onMouseOver={cC.btnClrShift} onMouseOut={cC.originalColor}>\n            Browse Public Games\n        </div>\n        <div id=\"searchForSession\" className=\"mainButton btnClr\" onMouseOver={cC.btnClrShift} onMouseOut={cC.originalColor}>\n            Search for Private Game\n        </div>\n    </div>\n    <div id=\"sessionPopup\">\n        <div id=\"codeText\">\n            Your session code is:\n        </div>\n        <div id=\"code\">\n            PLACEHOLDER\n        </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/animations/colorChange.js",["35"],"export const changeToWhite = e => e.target.style.color = '#8f8f8f';\nexport const changeToBlack = e => e.target.style.color = 'black';\n\n// var x;\n// var y;\n// x = getComputedStyle(e.target).getPropertyValue(\"background-color\").toString();\n// y = getComputedStyle(e.target).getPropertyValue(\"color\").toString();\n\nexport const btnClrShift = e => {\n    e.target.animate([{ backgroundColor: '#b3b3b3' }], {duration: 200, fill: 'forwards'});\n    e.target.animate([{ color: 'white'}], {duration: 0, fill: 'forwards'});\n}\n\nexport const originalColor = e => {\n    e.target.animate([ {backgroundColor: '#c079ff' }], {duration: 200, fill: 'forwards' });\n    e.target.animate([{ color: 'black' }], {duration: 200, fill: 'forwards'});\n}\n\nexport const darkMode = () => {\n    var c = [];\n\n    switch(localStorage.getItem('darkMode')){\n        case 'enabled':\n            c[1] = '#fdf906';\n            c[2] = '#c079ff';\n            c[3] = 'white';\n            c[4] = 'black';\n            c[5] = '#383838';\n            c[6] = 'Enable Dark Mode';\n            c[7] = 'disabled';\n            break;\n        case 'disabled':\n            c[1] = '#d549eb';\n            c[2] = '#5eff99';\n            c[3] = '#3d298a';\n            c[4] = 'white';\n            c[5] = '#ededed';\n            c[6] = 'Disable Dark Mode';\n            c[7] = 'enabled';\n            break;\n    }\n\n    document.getElementById('headerBar').animate([{backgroundColor: c[1]}], {duration: 200, fill: 'forwards'});\n\n    var x = document.querySelectorAll('.btnClr');\n    for (var i=0; i<x.length; i++){\n        x[i].animate([{backgroundColor: c[2]}], {duration: 200, fill: 'forwards'});\n    }\n\n    document.body.animate([{backgroundColor: c[3]}], {duration: 200, fill: 'forwards'});\n    document.getElementById('mainGrid').animate([{backgroundColor: c[3]}], {duration: 200, fill: 'forwards'});\n    document.getElementById('dropdownHelp').style.backgroundColor = c[3];\n    document.getElementById('dropdownSettings').animate([{backgroundColor: c[3]}], {duration: 200, fill: 'forwards'});\n    \n    document.getElementById('title').style.color = c[4];\n    document.getElementById('subtitle').style.color = c[5];\n    document.getElementById('dropdownHelp').style.color = c[5];\n\n    document.getElementById('darkMode').innerHTML = c[6];\n    localStorage.setItem('darkMode', c[7]);\n}","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/animations/animateDropdown.js",["36","37","38"],"var a;\nvar b;\n\nexport const animateDropdown = e => {\n    if(e.target.id == 'help'){\n        a = document.getElementById('dropdownHelp');\n        b = document.getElementById('dropdownSettings');\n        //show scroll bar when help is selected\n        document.body.style.overflowY = \"visible\";\n    }else{\n        a = document.getElementById('dropdownSettings');\n        b = document.getElementById('dropdownHelp');\n        document.body.style.overflowY = \"hidden\";\n        \n    }\n    var c = document.getElementById(\"mainGrid\");\n    if(a.style.zIndex == 0){\n        //swap transparencies and z-index\n        a.animate([{ opacity: 0 }, { opacity: 1 }], { duration: 200, fill: 'forwards' });\n        c.animate([{ opacity: 1 }, { opacity: 0 }], { duration: 200, fill: 'forwards' });\n        setTimeout(() => { a.style.zIndex = 1; c.style.zIndex = 0; window.scrollTo(0, 0); }, 200);\n\n        if(b.style.zIndex == 1){\n            //transparent background and last clicked dropdown, send last clicked to bottom\n            b.animate([{ opacity: 1 }, { opacity: 0 }], { duration: 200, fill: 'forwards' });\n            c.animate([{ opacity: 1 }, { opacity: 0 }], { duration: 0, fill: 'forwards' });\n            setTimeout(() => { b.style.zIndex = 0; window.scrollTo(0, 0); }, 200);\n            //hide scroll bar when help is hidden\n            \n        }\n    }else{\n        //swap transparencies and z-index back to original\n        a.animate([{ opacity: 1 }, { opacity: 0 }], { duration: 200, fill: 'forwards' });\n        c.animate([{ opacity: 0 }, { opacity: 1 }], { duration: 200, fill: 'forwards' });\n        setTimeout(() => { a.style.zIndex = 0; c.style.zIndex = 1; window.scrollTo(0, 0); }, 200);\n        //hide scroll bar when help is hidden\n        document.body.style.overflowY = \"hidden\";\n    }\n}","/home/wb/Documents/CodingProjects/BRUNO/NewReactComponents/src/animations/animatePopup.js",["39"],"export const animatePopup = e => {\n    if(e.target.id == \"createSession\"){\n        document.getElementById('sessionPopup').style.zIndex = 5;\n        document.body.style.filter = \"brightness(50%)\";\n    }\n}",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":17,"nodeType":"46","messageId":"47","endLine":2,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":2,"column":27,"nodeType":"46","messageId":"47","endLine":2,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":22,"column":5,"nodeType":"51","messageId":"52","endLine":41,"endColumn":6},{"ruleId":"53","severity":1,"message":"54","line":5,"column":20,"nodeType":"55","messageId":"56","endLine":5,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":17,"column":23,"nodeType":"55","messageId":"56","endLine":17,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":23,"column":27,"nodeType":"55","messageId":"56","endLine":23,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":2,"column":20,"nodeType":"55","messageId":"56","endLine":2,"endColumn":22},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]